version: 2


# -------------------------------------------------------------------
#   WORKFLOWS
# -------------------------------------------------------------------

workflows:
    version: 2
    build_test_deploy_feature:
        jobs:
            - build_image:
                filters:
                    branches:
                        ignore:
                            - develop
                            - master
            - run_unit_tests:
                requires:
                    - build_image
            - run_integration_tests:
                requires:
                    - build_image

            - deploy_for_e2e_testing:
                requires:
                    - run_unit_tests
                    - run_integration_tests

            - run_blackbox_tests:
                requires:
                    - deploy_for_e2e_testing
            - run_ui_tests:
                requires:
                    - deploy_for_e2e_testing

            - deploy_feature:
                requires:
                    - run_blackbox_tests
                    - run_ui_tests

    build_test_deploy_develop:
        jobs:
            - build_image:
                filters:
                    branches:
                        only: develop
            - run_unit_tests:
                requires:
                    - build_image

            - run_integration_tests:
                requires:
                    - build_image

            - deploy_for_e2e_testing:
                requires:
                    - run_unit_tests
                    - run_integration_tests

            - run_blackbox_tests:
                requires:
                    - deploy_for_e2e_testing
            - run_ui_tests:
                requires:
                    - deploy_for_e2e_testing

            - deploy_develop:
                  requires:
                  - run_blackbox_tests
                  - run_ui_tests


    build_test_deploy_master:
        jobs:
            - build_image:
                filters:
                    branches:
                        only: master
            - run_unit_tests:
                requires:
                    - build_image
            - run_integration_tests:
                requires:
                    - build_image

            - deploy_for_e2e_testing:
                requires:
                    - run_unit_tests
                    - run_integration_tests

            - run_blackbox_tests:
                requires:
                    - deploy_for_e2e_testing
            - run_ui_tests:
                requires:
                    - deploy_for_e2e_testing

            - deploy_master:
                requires:
                    - run_blackbox_tests
                    - run_ui_tests


# -------------------------------------------------------------------
#   BRANCH ENV VARS
# -------------------------------------------------------------------

defaults: &defaults
    docker:
        - image: circleci/node:latest
    working_directory: ~/particl-market

commonenv: &commonenv
    TERM: xterm                               # colors
    REGISTRY: r.cfcr.io                       # codefresh registry
    IMAGE_NAME: ludx/particl-market-ci        #


jobs:

    build_image:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
            - checkout
            - setup_remote_docker:
                docker_layer_caching: true
                version: 17.11.0-ce
            - attach_workspace:
                at: ~/particl-market
            - restore_cache:
                keys:
                    - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                    - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Building $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
            - run:
                name: Generate build version # todo: use CIRCLE_SHA1?
                command: ./bin/ci-create-build-version.sh
            - run:
                name: Login to private docker registry
                command: docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
            - run:
                name: Build docker image
                command: docker build --pull --cache-from "$IMAGE_NAME" --tag "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" -f Dockerfile.ci .
            - run:
                name: Push docker image to registry
                command: docker push $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1

            # cache will be regenerated every time something is changed in package.json file,
            # each branch will generate separate cache.
            - save_cache:
                paths:
                    - node_modules
                key: particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
            - persist_to_workspace: # persist the cloned repo as workspace
                root: ~/particl-market
                paths:
                    - .


    run_unit_tests:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
        - setup_remote_docker:
            docker_layer_caching: true
            version: 17.11.0-ce
        - attach_workspace:
            at: ~/particl-market
        - restore_cache:
            keys:
                - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Running unit tests $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
        - run:
            name: Run unit tests (docker)
            command: |
                docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                docker run --name testapp $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1 bin/ci-unit-tests.sh

    run_integration_tests:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
        - setup_remote_docker:
            docker_layer_caching: true
            version: 17.11.0-ce
        - attach_workspace:
            at: ~/particl-market
        - restore_cache:
            keys:
                - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Running integration tests $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
        - run:
            name: Run integration tests (docker)
            command: |
                docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                docker run --name testapp $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1 bin/ci-integration-tests.sh

    run_blackbox_tests:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
        - setup_remote_docker:
            docker_layer_caching: true
            version: 17.11.0-ce
        - attach_workspace:
            at: ~/particl-market
        - restore_cache:
            keys:
                - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Running blackbox tests $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
        - run:
            name: Run integration tests (docker)
            command: |
                docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                docker run --name testapp $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1 bin/ci-blackbox-tests.sh

    run_ui_tests:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
        - setup_remote_docker:
            docker_layer_caching: true
            version: 17.11.0-ce
        - attach_workspace:
            at: ~/particl-market
        - restore_cache:
            keys:
                - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Running ui tests $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
        - run:
            name: Run ui tests (docker)
            command: |
                docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                docker run --name testapp $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1 bin/ci-ui-tests.sh


    deploy_for_e2e_testing:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
        - setup_remote_docker:
            docker_layer_caching: true
            version: 17.11.0-ce
        - attach_workspace:
            at: ~/particl-market
        - restore_cache:
            keys:
                - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deploying for testing $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
        - run:
            name: Rebuild docker image with ci-test tag
            command: |
                docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                docker build --pull --cache-from "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" --tag "$REGISTRY/$IMAGE_NAME:ci-test" -f Dockerfile.ci .
        - run:
            name: Push docker image to registry
            command: docker push $REGISTRY/$IMAGE_NAME:ci-test

        - run:
            name: Upgrade kontena stack
            command: docker run --entrypoint "./kontena-stack-upgrade.sh" r.cfcr.io/ludx/codefresh-custom-runner ruth-master gridsteri dappshellcircle-stack git@github.com:particl/dapp-shell.git $CIRCLE_BRANCH kontena-circle.yml
        - run:
            name: Post to Discord
            command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deployed for testing http://circle[1|2].particl.xyz/cli" "CircleCI" "$DISCORD_URL"


    deploy_feature:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
                version: 17.11.0-ce
            - attach_workspace:
                at: ~/particl-market
            - restore_cache:
                keys:
                    - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                    - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deploying $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
            - run:
                name: Rebuild docker image with develop tag
                command: |
                    docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                    docker build --pull --cache-from "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" --tag "$REGISTRY/$IMAGE_NAME:feature" -f Dockerfile.ci .
            - run:
                name: Push docker image to registry
                command: docker push $REGISTRY/$IMAGE_NAME:feature

            - run:
                name: Upgrade kontena stack
                command: docker run --entrypoint "./kontena-stack-upgrade.sh" r.cfcr.io/ludx/codefresh-custom-runner ruth-master gridsteri dappshellfeature-stack git@github.com:particl/dapp-shell.git $CIRCLE_BRANCH kontena-feature.yml
            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deployed http://feature[1|2].particl.xyz/cli" "CircleCI" "$DISCORD_URL"


    deploy_develop:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
                version: 17.11.0-ce
            - attach_workspace:
                at: ~/particl-market
            - restore_cache:
                keys:
                    - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                    - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deploying $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
            - run:
                name: Rebuild docker image with develop tag
                command: |
                    docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                    docker build --pull --cache-from "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" --tag "$REGISTRY/$IMAGE_NAME:develop" -f Dockerfile.ci .
            - run:
                name: Push docker image to registry
                command: docker push $REGISTRY/$IMAGE_NAME:develop

            - run:
                name: Upgrade kontena stack
                command: docker run --entrypoint "./kontena-stack-upgrade.sh" r.cfcr.io/ludx/codefresh-custom-runner ruth-master gridsteri dappshelldev-stack git@github.com:particl/dapp-shell.git $CIRCLE_BRANCH kontena-develop.yml
            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deployed http://develop[1|2].particl.xyz/cli" "CircleCI" "$DISCORD_URL"


    deploy_master:
        <<: *defaults
        environment:
            <<: *commonenv

        steps:
            - setup_remote_docker:
                docker_layer_caching: true
                version: 17.11.0-ce
            - attach_workspace:
                at: ~/particl-market
            - restore_cache:
                keys:
                    - particl-market-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
                    - particl-market-dependencies- # fallback to using the latest cache if no exact match is found

            - run:
                name: Post to Discord
                command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deploying $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
            - run:
                name: Rebuild docker image with master tag
                command: |
                    docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
                    docker build --pull --cache-from "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" --tag "$REGISTRY/$IMAGE_NAME:master" -f Dockerfile.ci .
            - run:
                  name: Push docker image to registry
                  command: docker push $REGISTRY/$IMAGE_NAME:master

            - run:
                  name: Upgrade kontena stack
                  command: docker run --entrypoint "./kontena-stack-upgrade.sh" r.cfcr.io/ludx/codefresh-custom-runner ruth-master gridsteri dappshellmaster-stack git@github.com:particl/dapp-shell.git $CIRCLE_BRANCH kontena-master.yml
            - run:
                  name: Post to Discord
                  command: ./bin/ci-post.sh "[$CIRCLE_BRANCH] Deployed http://master[1|2].particl.xyz/cli" "CircleCI" "$DISCORD_URL"

